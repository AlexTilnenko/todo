{"version":3,"sources":["components/TodoHeader/app-header.js","components/SearchForm/SearchForm.js","components/TodoStatusFilter/TodoStatusFilter.js","components/TodoListItem/TodoListItem.js","components/TodoList/TodoList.js","components/AddTodoForm/AddTodoForm.js","components/Error/Error.js","components/App/App.js","index.js"],"names":["AppHeader","important","allTodos","completed","className","SearchForm","props","state","term","onUpdateSearch","bind","e","target","value","this","setState","type","placeholder","onChange","Component","TodoStatusFilter","buttons","name","label","map","filter","onFilterSelect","active","key","classNames","onClick","TodoListItem","onDelete","onToggleImportant","onToggleCompleted","TodoList","todos","ListGroup","id","itemProps","PostAddForm","text","onValueChange","onSubmit","preventDefault","onAdd","Error","Alert","color","App","data","visibleError","deleteItem","addItem","showError","hideError","index","findIndex","elem","slice","body","trim","newItem","Date","now","setTimeout","old","items","item","length","indexOf","visibleTodos","filterTodo","searchTodo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5d11c91b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './app-header.scss';\r\n\r\nconst AppHeader = ({ important, allTodos, completed }) => {\r\n   return (\r\n      <div className=\"app-header d-flex\">\r\n         <h1>Список задач</h1>\r\n         <h2>\r\n            {allTodos} заданий из них: важных {important}, выполненных {completed}\r\n         </h2>\r\n      </div>\r\n   );\r\n};\r\nexport default AppHeader;\r\n","import React, { Component } from 'react';\r\n\r\nimport './SearchForm.scss';\r\n\r\nexport default class SearchForm extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         term: '',\r\n      };\r\n      this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n   }\r\n   onUpdateSearch(e) {\r\n      const term = e.target.value;\r\n      this.setState({ term: term });\r\n      this.props.onUpdateSearch(term);\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <input\r\n            className=\"form-control search-input\"\r\n            type=\"text\"\r\n            placeholder=\"Поиск по заданиям\"\r\n            onChange={this.onUpdateSearch}\r\n         />\r\n      );\r\n   }\r\n}\r\n","import React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport './TodoStatusFilter.scss';\r\n\r\nexport default class TodoStatusFilter extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.buttons = [\r\n         { name: 'all', label: 'Все' },\r\n         { name: 'important', label: 'Важные' },\r\n         { name: 'completed', label: 'Не сделано' },\r\n      ];\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div className=\"btn-group\">\r\n            {this.buttons.map(({ name, label }) => {\r\n               const { filter, onFilterSelect } = this.props;\r\n               const active = filter === name;\r\n               return (\r\n                  <button\r\n                     key={name}\r\n                     className={classNames('btn', 'btn-filter', {\r\n                        'btn-primary': active,\r\n                        'btn-outline-secondary': !active,\r\n                     })}\r\n                     onClick={() => onFilterSelect(name)}\r\n                  >\r\n                     {label}\r\n                  </button>\r\n               );\r\n            })}\r\n         </div>\r\n      );\r\n   }\r\n}\r\n","import React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport './TodoListItem.scss';\r\n\r\nexport default class TodoListItem extends Component {\r\n   render() {\r\n      const {\r\n         label,\r\n         onDelete,\r\n         onToggleImportant,\r\n         onToggleCompleted,\r\n         important,\r\n         completed,\r\n      } = this.props;\r\n\r\n      return (\r\n         <div\r\n            className={classNames('app-list-item d-flex justify-content-between', {\r\n               important: important,\r\n               completed: completed,\r\n            })}\r\n         >\r\n            <div className=\"d-flex justify-content-between\">\r\n               <i className=\" fa fa-check\"></i>\r\n               <span className=\"app-list-item-label\" onClick={onToggleCompleted}>\r\n                  {label}\r\n               </span>\r\n            </div>\r\n            <div className=\"d-flex justify-content-center aline-items-center\">\r\n               <button className=\"btn-star btn-sm\" onClick={onToggleImportant}>\r\n                  <i className=\"fa fa-star\"></i>\r\n               </button>\r\n               <button className=\"btn-trash btn-sm\" onClick={onDelete}>\r\n                  <i className=\"fa fa-trash-o\"></i>\r\n               </button>\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n","import React from 'react';\r\nimport { ListGroup } from 'reactstrap';\r\nimport TodoListItem from '../TodoListItem/TodoListItem';\r\n\r\nimport './TodoList.scss';\r\n\r\nconst TodoList = ({ todos, onDelete, onToggleImportant, onToggleCompleted }) => {\r\n   return (\r\n      <ListGroup className=\"app-list\">\r\n         {todos.map(({ id, ...itemProps }) => {\r\n            return (\r\n               <li key={id} className=\"list-group-item\">\r\n                  <TodoListItem\r\n                     {...itemProps}\r\n                     onDelete={() => onDelete(id)}\r\n                     onToggleImportant={() => onToggleImportant(id)}\r\n                     onToggleCompleted={() => onToggleCompleted(id)}\r\n                  />\r\n               </li>\r\n            );\r\n         })}\r\n      </ListGroup>\r\n   );\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { Component } from 'react';\r\n\r\nimport './AddTodoForm.scss';\r\n\r\nexport default class PostAddForm extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         text: '',\r\n      };\r\n      this.onValueChange = this.onValueChange.bind(this);\r\n      this.onSubmit = this.onSubmit.bind(this);\r\n   }\r\n\r\n   onValueChange(e) {\r\n      this.setState({\r\n         text: e.target.value,\r\n      });\r\n   }\r\n\r\n   onSubmit(e) {\r\n      e.preventDefault();\r\n      this.props.onAdd(this.state.text);\r\n      this.setState({\r\n         text: '',\r\n      });\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <form className=\"bottom-panel d-flex\" onSubmit={this.onSubmit}>\r\n            <input\r\n               type=\"text\"\r\n               placeholder=\"Добавьте новое задание!\"\r\n               className=\"form-control new-post-label\"\r\n               onChange={this.onValueChange}\r\n               value={this.state.text}\r\n            />\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n               Добавить\r\n            </button>\r\n         </form>\r\n      );\r\n   }\r\n}\r\n","import React from 'react';\r\nimport { Alert } from 'reactstrap';\r\n\r\nimport './Error.scss';\r\n\r\nfunction Error() {\r\n   return (\r\n      <div className=\"error\">\r\n         <Alert color=\"danger\">Введите текст задачи!!!</Alert>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Error;\r\n","import React, { Component } from 'react';\r\n\r\nimport TodoHeader from '../TodoHeader/app-header';\r\nimport SearchForm from '../SearchForm/SearchForm';\r\nimport TodoStatusFilter from '../TodoStatusFilter/TodoStatusFilter';\r\nimport TodoList from '../TodoList/TodoList';\r\nimport AddTodoForm from '../AddTodoForm/AddTodoForm';\r\nimport Error from '../Error/Error';\r\n\r\nimport './App.scss';\r\n\r\nexport default class App extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         data: [\r\n            { id: 1, label: 'Learn', completed: true, important: true },\r\n            { id: 2, label: 'React todo list', completed: true, important: false },\r\n            { id: 3, label: 'Learn JS', completed: false, important: true },\r\n         ],\r\n         term: '',\r\n         filter: 'all',\r\n         visibleError: false,\r\n      };\r\n      this.deleteItem = this.deleteItem.bind(this);\r\n      this.addItem = this.addItem.bind(this);\r\n      this.onToggleImportant = this.onToggleImportant.bind(this);\r\n      this.onToggleCompleted = this.onToggleCompleted.bind(this);\r\n      this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n      this.onFilterSelect = this.onFilterSelect.bind(this);\r\n      this.showError = this.showError.bind(this);\r\n      this.hideError = this.hideError.bind(this);\r\n   }\r\n\r\n   deleteItem(id) {\r\n      this.setState(({ data }) => {\r\n         const index = data.findIndex((elem) => elem.id === id);\r\n\r\n         const newArr = [...data.slice(0, index), ...data.slice(index + 1)];\r\n         return {\r\n            data: newArr,\r\n         };\r\n      });\r\n   }\r\n\r\n   addItem(body) {\r\n      if (body.trim()) {\r\n         const newItem = {\r\n            label: body,\r\n            important: false,\r\n            id: Date.now(),\r\n         };\r\n         this.setState(({ data }) => {\r\n            const newArr = [...data, newItem];\r\n            return {\r\n               data: newArr,\r\n            };\r\n         });\r\n      } else {\r\n         this.showError();\r\n         setTimeout(this.hideError, 2500);\r\n      }\r\n   }\r\n\r\n   showError() {\r\n      this.setState(() => {\r\n         return {\r\n            visibleError: true,\r\n         };\r\n      });\r\n   }\r\n\r\n   hideError() {\r\n      this.setState(() => {\r\n         return {\r\n            visibleError: false,\r\n         };\r\n      });\r\n   }\r\n\r\n   onToggleImportant(id) {\r\n      this.setState(({ data }) => {\r\n         const index = data.findIndex((elem) => elem.id === id);\r\n         const old = data[index];\r\n         const newItem = { ...old, important: !old.important };\r\n         const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\r\n         return {\r\n            data: newArr,\r\n         };\r\n      });\r\n   }\r\n\r\n   onToggleCompleted(id) {\r\n      this.setState(({ data }) => {\r\n         const index = data.findIndex((elem) => elem.id === id);\r\n         const old = data[index];\r\n         const newItem = { ...old, completed: !old.completed };\r\n         const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\r\n         return {\r\n            data: newArr,\r\n         };\r\n      });\r\n   }\r\n\r\n   filterTodo(items, filter) {\r\n      switch (true) {\r\n         case filter === 'completed':\r\n            return items.filter((item) => item.completed === false);\r\n         case filter === 'important':\r\n            return items.filter((item) => item.important);\r\n         default:\r\n            return items;\r\n      }\r\n   }\r\n\r\n   searchTodo(items, term) {\r\n      if (term.length === 0) {\r\n         return items;\r\n      }\r\n      return items.filter((item) => {\r\n         return item.label.indexOf(term) > -1;\r\n      });\r\n   }\r\n\r\n   onUpdateSearch(term) {\r\n      this.setState({ term });\r\n   }\r\n\r\n   onFilterSelect(filter) {\r\n      this.setState({ filter });\r\n   }\r\n\r\n   render() {\r\n      const { data, term, filter, visibleError } = this.state;\r\n      const important = data.filter((item) => item.important).length;\r\n      const completed = data.filter((item) => item.completed).length;\r\n      const allTodos = data.length;\r\n\r\n      const visibleTodos = this.filterTodo(this.searchTodo(data, term), filter);\r\n      return (\r\n         <div className=\"app\">\r\n            <TodoHeader important={important} completed={completed} allTodos={allTodos} />\r\n\r\n            <div className=\"searh-panel d-flex\">\r\n               <SearchForm onUpdateSearch={this.onUpdateSearch} />\r\n               <TodoStatusFilter filter={filter} onFilterSelect={this.onFilterSelect} />\r\n            </div>\r\n            <TodoList\r\n               todos={visibleTodos}\r\n               onDelete={this.deleteItem}\r\n               onToggleImportant={this.onToggleImportant}\r\n               onToggleCompleted={this.onToggleCompleted}\r\n               />\r\n            <AddTodoForm onAdd={this.addItem} />\r\n               {visibleError === true && <Error />}\r\n         </div>\r\n      );\r\n   }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.scss';\n\nReactDOM.render(<App />, document.getElementById('root')\n);\n\n"],"sourceRoot":""}